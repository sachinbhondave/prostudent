

import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import java.awt.Font;
import java.io.File;
import java.io.FileOutputStream;
import java.io.OutputStream;
import java.util.Date;

import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.util.Properties;

import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.Authenticator;
import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import student.studentJDBCTemplate;
/**
 * Servlet implementation class Cstudentsearch
 */
@WebServlet("/Cstudentsearch")
public class Cstudentsearch extends HttpServlet {
	private static final long serialVersionUID = 1L;
	studentJDBCTemplate save=new studentJDBCTemplate();
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public Cstudentsearch() {
        super();
        // TODO Auto-generated constructor stub
        //faiz check
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		ArrayList  pouplatedstudentrecords=new ArrayList();

		System.out.println("forsearch"+request.getParameter("textname"));
		try {
			pouplatedstudentrecords=save.getallrecordofstudent(request.getParameter("textname"));
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		System.out.println("allrecords"+pouplatedstudentrecords.toString());
		try {
			OutputStream file = new FileOutputStream(new File("D:\\Test.pdf"));
            
			Document document = new Document();
			PdfWriter.getInstance(document, file);

			document.open();
 	  
			
		    Paragraph preface = new Paragraph();
            // We add one empty line
            addEmptyLine(preface, 1);
            // Lets write a big header
            preface.add(new Paragraph(Font.BOLD,  "FUTURE SCHOOL STUDENT INVOICE"));

            addEmptyLine(preface, 1);
            // Will create: Report generated by: _name, _date
            preface.add(new Paragraph(
                            Font.BOLD, //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
                            "Report generated by: " + "admin" + ", " + new Date()));
            addEmptyLine(preface, 1);
            preface.add(new Paragraph(
                            Font.BOLD,
                            "This document describes student deatils and remaining  fees::"));
            addEmptyLine(preface, 2);

            document.add(preface);
            
			document.add(new Paragraph("student name -"+pouplatedstudentrecords.get(0)));
 			document.add(new Paragraph("father name -"+pouplatedstudentrecords.get(1)));
			document.add(new Paragraph("student post address -"+pouplatedstudentrecords.get(2)));
			document.add(new Paragraph("student personal address -"+pouplatedstudentrecords.get(3)));
			document.add(new Paragraph("Gender -"+pouplatedstudentrecords.get(4)));
			document.add(new Paragraph("city -"+pouplatedstudentrecords.get(5)));
			document.add(new Paragraph("District-"+pouplatedstudentrecords.get(7)));
			document.add(new Paragraph("state-"+pouplatedstudentrecords.get(8)));
			document.add(new Paragraph("pincode -"+pouplatedstudentrecords.get(9)));
			document.add(new Paragraph("student email -"+pouplatedstudentrecords.get(10)));
			document.add(new Paragraph("student birth -"+pouplatedstudentrecords.get(11)));
			document.add(new Paragraph("student contact -"+pouplatedstudentrecords.get(12)));
			document.add(new Paragraph("student std -"+pouplatedstudentrecords.get(14)));
			document.add(new Paragraph("course name -"+pouplatedstudentrecords.get(15)));
			document.add(new Paragraph("course medium-"+pouplatedstudentrecords.get(16)));
			document.add(new Paragraph("remaining fees-"+pouplatedstudentrecords.get(18)));
           
			 Paragraph preface2 = new Paragraph();
	          
	            addEmptyLine(preface2, 15);
	            // Will create: Report generated by: _name, _date
	            preface2.add(new Paragraph(
	                            Font.BOLD, //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
	                            "AUTHORISED BY: " + "FUTURE SCHOOL " + ", " + new Date()));
	            addEmptyLine(preface2, 1);
	            preface2.add(new Paragraph(
	                            Font.BOLD,
	                            "Signature"));
	            addEmptyLine(preface2, 2);
	            document.add(preface2);
		          
  
			document.close();
			file.close();
           
			    String host = "smtp.gmail.com";
		        String port = "587";
		        String mailFrom = "sachinbhondave9@gmail.com";
		        String password = "sachin@321";
		 
		        // message info
		        String mailTo = "sachin_bhohdave@infosys.com";
		        String subject = "New email with attachments";
		        String message = "I have some attachments for you.";
			
		        String attachFiles = new String();
		        attachFiles = "D:\\Test.pdf";
                System.out.println("file"+attachFiles.toString());
		        try {
		            sendEmailWithAttachments(host, port, mailFrom, password, mailTo,
		                subject, message,attachFiles);
 		            System.out.println("Email sent.");
		        } catch (Exception ex) {
		            System.out.println("Could not send email.");
		            ex.printStackTrace();
		        }
			 
			
		} catch (Exception e) {

			e.printStackTrace();
		}
		   response.sendRedirect("http://localhost:7767/student/studentsearch.jsp");

	}

	
	
	
	public static void sendEmailWithAttachments(String host, String port,
            final String userName, final String password, String toAddress,
            String subject, String message,String attachFiles)
            throws AddressException, MessagingException {
        // sets SMTP server properties
        Properties properties = new Properties();
        properties.put("mail.smtp.host", host);
        properties.put("mail.smtp.port", port);
        properties.put("mail.smtp.auth", "true");
        properties.put("mail.smtp.starttls.enable", "true");
        properties.put("mail.user", userName);
        properties.put("mail.password", password);
 
        // creates a new session with an authenticator
      Authenticator auth = new Authenticator() {
            public PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(userName, password);
            }
        };
        Session session = Session.getInstance(properties, auth);
       
        session.setDebug(true);
        // creates a new e-mail message
        Message msg = new MimeMessage(session);
 
        msg.setFrom(new InternetAddress(userName));
        InternetAddress[] toAddresses = { new InternetAddress(toAddress) };
        msg.setRecipients(Message.RecipientType.TO, toAddresses);
        msg.setSubject(subject);
        msg.setSentDate(new Date());
 
        // creates message part
        MimeBodyPart messageBodyPart = new MimeBodyPart();
        messageBodyPart.setContent(message, "text/html");
 
        // creates multi-part
        Multipart multipart = new MimeMultipart();
        multipart.addBodyPart(messageBodyPart);
 
        // adds attachments
       if (attachFiles != null ) {
          
                MimeBodyPart attachPart = new MimeBodyPart();
 
                try {
                    attachPart.attachFile(attachFiles);
                } catch (IOException ex) {
                	System.out.println("nothing attch");
                    ex.printStackTrace();
                }
 
                multipart.addBodyPart(attachPart);
            
        }
 
        // sets the multi-part as e-mail's content
         msg.setContent(multipart);
 
        // sends the e-mail
        Transport.send(msg);

    }
 
	
	private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
                paragraph.add(new Paragraph(" "));
        }
}
 

	
}
